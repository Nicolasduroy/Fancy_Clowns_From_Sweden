local
   % See project statement for API details.
   [Project] = {Link ['Project2018.ozf']}
   Time = {Link ['x-oz://boot/Time']}.1.getReferenceTime

   %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

   % Translate a note to the extended notation.
   fun {NoteToExtended Note}
      case Note
      of Name#Octave then
         note(name:Name octave:Octave sharp:true duration:1.0 instrument:none)
      [] Atom then
         case {AtomToString Atom}
         of [_] then
            note(name:Atom octave:4 sharp:false duration:1.0 instrument:none)
         [] [N O] then
            note(name:{StringToAtom [N]}
                 octave:{StringToInt [O]}
                 sharp:false
                 duration:1.0
                 instrument: none)
         end
      end
   end

   %Translate a chord to the extended notation.
   fun{ChordToExtended Chord}
      case Chord of H|T then
	 {NoteToExtended H}|{ChordToExtended T}
      else
	 nil
      end
   end
   
   %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

   %Stretch the duration of all notes and silences in Chord by Factor
   fun{StretchChord Factor Chord}
      case Chord of H|T then
	 case H of silence(duration:D) then
	    silence(duration:D*Factor)|{StretchChord Factor T}
	 [] note(name:N octave:O sharp:S duration:D instrument:I) then
	    note(name:N octave:O sharp:S duration:D*Factor instrument:I)|{StretchChord Factor T}
	 end
      else
	 nil
      end
   end

   %Stretch the duration of all notes, silences and chords in Part by Factor
   fun{Stretch Factor Part}
      case Part of Elem|T then	 
	 case Elem of silence(duration:D) then
	    silence(duration:D*Factor)|{Stretch Factor T}
	 [] note(name:N octave:O sharp:S duration:D instrument:I) then
	    note(name:N octave:O sharp:S duration:D*Factor instrument:I)|{Stretch Factor T}   
	 [] H|Tail then
	    {StretchChord Factor Elem}|{Stretch Factor T}
	 else
	    {Stretch Factor T}
	 end
      else
	 nil
      end
   end
      
   %Fix the duration of Partition to FixedDuration
   fun {FixDuration FixedDuration Partition}
      D
      %returns the duration in seconds of Partition.
      fun {Duration Partition Acc}	 
	 case Partition of Elem|T then
	    case Elem of silence(duration:D) then
	       {Duration T Acc+D}
	    [] note(name:N octave:O sharp:S duration:D instrument:I) then
	       {Duration T Acc+D}
	    [] H|Tail then
	       case H of silence(duration:D) then
	          {Duration T Acc+D}
	       [] note(name:N octave:O sharp:S duration:D instrument:I) then
	          {Duration T Acc+D}
	       end
	    else
	       {Duration T Acc}
	    end
	 else
	    0.0
	 end
      end
   in
      D = {Duration Partition 0.0}
      if D \= FixedDuration then
	 {Stretch FixedDuration/D Partition}
      else
	 Partition
      end
   end
  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

   %Returns a list with a Amount of times Sound
   fun  {Drone Sound Amount}
      if Amount == 0 then nil
      else
	 Sound|{Drone Sound Amount-1}
      end
   end

   %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

  fun {Transpose Semitone Partition}
     local Notes DeltaO Sharp Indice Semitones in
        case Partition of Elem|T then
            Notes = notes(1:c 2:c 3:d 4:d 5:e 6:f 7:f 8:g 9:g 10:a 11:a 12:b)
	    DeltaO = (Semitone div 12)
	    Semitones = Semitone-12*DeltaO
            case Elem of note(name:Name octave:O sharp:S duration:D instrument:I) then
	        case Name of a then
	            if S then
	               if 11+Semitones > 12 then
		          Indice = (11+Semitones)-12
		          Sharp = (Indice == 2) orelse (Indice == 4) orelse (Indice == 7) orelse (Indice == 9) orelse (Indice == 11)
		          note(name:(Notes.Indice) octave:O+1+DeltaO sharp:Sharp duration:D instrument:I)|{Transpose Semitone T}
	               elseif 11+Semitones < 1 then
		          Indice = 12+11+Semitones
                          Sharp = Indice == 2 orelse Indice == 4 orelse Indice == 7 orelse Indice == 9 orelse Indice == 11
                          note(name:(Notes.Indice) octave:O-1+DeltaO sharp:Sharp duration:D instrument:I)|{Transpose Semitone T}
                       else
                          Indice = 11+Semitones
                          Sharp = Indice == 2 orelse Indice == 4 orelse Indice == 7 orelse Indice == 9 orelse Indice == 11
                          note(name:(Notes.Indice) octave:O+DeltaO sharp:Sharp duration:D instrument:I)|{Transpose Semitone T}
                       end
                    else
	               if 10+Semitones > 12 then
		          Indice = (10+Semitones)-12
		          Sharp = (Indice == 2) orelse (Indice == 4) orelse (Indice == 7) orelse (Indice == 9) orelse (Indice == 11)
		          note(name:(Notes.Indice) octave:O+1+DeltaO sharp:Sharp duration:D instrument:I)|{Transpose Semitone T}
                       elseif 10+Semitones < 1 then
                          Indice = 12+10+Semitones
                          Sharp = Indice == 2 orelse Indice == 4 orelse Indice == 7 orelse Indice == 9 orelse Indice == 11
                          note(name:(Notes.Indice) octave:O-1+DeltaO sharp:Sharp duration:D instrument:I)|{Transpose Semitone T}
                       else
                          Indice = 10+Semitones
                          Sharp = Indice == 2 orelse Indice == 4 orelse Indice == 7 orelse Indice == 9 orelse Indice == 11
                          note(name:(Notes.Indice) octave:O+DeltaO sharp:Sharp duration:D instrument:I)|{Transpose Semitone T}
	               end
	            end
	        [] b then
	    if 12+Semitones > 12 then
		  Indice = (12+Semitones)-12
		  Sharp = (Indice == 2) orelse (Indice == 4) orelse (Indice == 7) orelse (Indice == 9) orelse (Indice == 11)
		  note(name:(Notes.Indice) octave:O+1+DeltaO sharp:Sharp duration:D instrument:I)|{Transpose Semitone T}
               elseif 12+Semitones < 1 then
                  Indice = 12+12+Semitones
                  Sharp = Indice == 2 orelse Indice == 4 orelse Indice == 7 orelse Indice == 9 orelse Indice == 11
                  note(name:(Notes.Indice) octave:O-1+DeltaO sharp:Sharp duration:D instrument:I)|{Transpose Semitone T}
               else
                  Indice = 12+Semitones
                  Sharp = Indice == 2 orelse Indice == 4 orelse Indice == 7 orelse Indice == 9 orelse Indice == 11
                  note(name:(Notes.Indice) octave:O+DeltaO sharp:Sharp duration:D instrument:I)|{Transpose Semitone T}
	       end
	 [] c then
	    if S then
	       if 2+Semitones > 12 then
		  Indice = (2+Semitones)-12
		  Sharp = (Indice == 2) orelse (Indice == 4) orelse (Indice == 7) orelse (Indice == 9) orelse (Indice == 11)
		  note(name:(Notes.Indice) octave:O+1+DeltaO sharp:Sharp duration:D instrument:I)|{Transpose Semitone T}
	       elseif 2+Semitones < 1 then
		  Indice = 12+2+Semitones
                  Sharp = Indice == 2 orelse Indice == 4 orelse Indice == 7 orelse Indice == 9 orelse Indice == 11
                  note(name:(Notes.Indice) octave:O-1+DeltaO sharp:Sharp duration:D instrument:I)|{Transpose Semitone T}
               else
                  Indice = 2+Semitones
                  Sharp = Indice == 2 orelse Indice == 4 orelse Indice == 7 orelse Indice == 9 orelse Indice == 11
                  note(name:(Notes.Indice) octave:O+DeltaO sharp:Sharp duration:D instrument:I)|{Transpose Semitone T}
               end
            else
	       if 1+Semitones > 12 then
		  Indice = (1+Semitones)-12
		  Sharp = (Indice == 2) orelse (Indice == 4) orelse (Indice == 7) orelse (Indice == 9) orelse (Indice == 11)
		  note(name:(Notes.Indice) octave:O+1+DeltaO sharp:Sharp duration:D instrument:I)|{Transpose Semitone T}
               elseif 1+Semitones < 1 then
                  Indice = 12+1+Semitones
                  Sharp = Indice == 2 orelse Indice == 4 orelse Indice == 7 orelse Indice == 9 orelse Indice == 11
                  note(name:(Notes.Indice) octave:O-1+DeltaO sharp:Sharp duration:D instrument:I)|{Transpose Semitone T}
               else
                  Indice = 1+Semitones
                  Sharp = Indice == 2 orelse Indice == 4 orelse Indice == 7 orelse Indice == 9 orelse Indice == 11
                  note(name:(Notes.Indice) octave:O+DeltaO sharp:Sharp duration:D instrument:I)|{Transpose Semitone T}
	       end
	    end
	    [] d then
	       if S then
	       if 4+Semitones > 12 then
		  Indice = (4+Semitones)-12
		  Sharp = (Indice == 2) orelse (Indice == 4) orelse (Indice == 7) orelse (Indice == 9) orelse (Indice == 11)
		  note(name:(Notes.Indice) octave:O+1+DeltaO sharp:Sharp duration:D instrument:I)|{Transpose Semitone T}
	       elseif 4+Semitones < 1 then
		  Indice = 12+4+Semitones
                  Sharp = Indice == 2 orelse Indice == 4 orelse Indice == 7 orelse Indice == 9 orelse Indice == 11
                  note(name:(Notes.Indice) octave:O-1+DeltaO sharp:Sharp duration:D instrument:I)|{Transpose Semitone T}
               else
                  Indice = 4+Semitones
                  Sharp = Indice == 2 orelse Indice == 4 orelse Indice == 7 orelse Indice == 9 orelse Indice == 11
                  note(name:(Notes.Indice) octave:O+DeltaO sharp:Sharp duration:D instrument:I)|{Transpose Semitone T}
               end
            else
	       if 3+Semitones > 12 then
		  Indice = (3+Semitones)-12
		  Sharp = (Indice == 2) orelse (Indice == 4) orelse (Indice == 7) orelse (Indice == 9) orelse (Indice == 11)
		  note(name:(Notes.Indice) octave:O+1+DeltaO sharp:Sharp duration:D instrument:I)|{Transpose Semitone T}
               elseif 3+Semitones < 1 then
                  Indice = 12+3+Semitones
                  Sharp = Indice == 2 orelse Indice == 4 orelse Indice == 7 orelse Indice == 9 orelse Indice == 11
                  note(name:(Notes.Indice) octave:O-1+DeltaO sharp:Sharp duration:D instrument:I)|{Transpose Semitone T}
               else
                  Indice = 3+Semitones
                  Sharp = Indice == 2 orelse Indice == 4 orelse Indice == 7 orelse Indice == 9 orelse Indice == 11
                  note(name:(Notes.Indice) octave:O+DeltaO sharp:Sharp duration:D instrument:I)|{Transpose Semitone T}
	       end
	    end
	    [] e then
	        if 5+Semitones > 12 then
		  Indice = (5+Semitones)-12
		  Sharp = (Indice == 2) orelse (Indice == 4) orelse (Indice == 7) orelse (Indice == 9) orelse (Indice == 11)
		  note(name:(Notes.Indice) octave:O+1+DeltaO sharp:Sharp duration:D instrument:I)|{Transpose Semitone T}
               elseif 5+Semitones < 1 then
                  Indice = 12+5+Semitones
                  Sharp = Indice == 2 orelse Indice == 4 orelse Indice == 7 orelse Indice == 9 orelse Indice == 11
                  note(name:(Notes.Indice) octave:O-1+DeltaO sharp:Sharp duration:D instrument:I)|{Transpose Semitone T}
               else
                  Indice = 5+Semitones
                  Sharp = Indice == 2 orelse Indice == 4 orelse Indice == 7 orelse Indice == 9 orelse Indice == 11
                  note(name:(Notes.Indice) octave:O+DeltaO sharp:Sharp duration:D instrument:I)|{Transpose Semitone T}
	       end
	 [] f then
	     if S then
	       if 7+Semitones > 12 then
		  Indice = (7+Semitones)-12
		  Sharp = (Indice == 2) orelse (Indice == 4) orelse (Indice == 7) orelse (Indice == 9) orelse (Indice == 11)
		  note(name:(Notes.Indice) octave:O+1+DeltaO sharp:Sharp duration:D instrument:I)|{Transpose Semitone T}
	       elseif 7+Semitones < 1 then
		  Indice = 12+7+Semitones
                  Sharp = Indice == 2 orelse Indice == 4 orelse Indice == 7 orelse Indice == 9 orelse Indice == 11
                  note(name:(Notes.Indice) octave:O-1+DeltaO sharp:Sharp duration:D instrument:I)|{Transpose Semitone T}
               else
                  Indice = 7+Semitones
                  Sharp = Indice == 2 orelse Indice == 4 orelse Indice == 7 orelse Indice == 9 orelse Indice == 11
                  note(name:(Notes.Indice) octave:O+DeltaO sharp:Sharp duration:D instrument:I)|{Transpose Semitone T}
               end
            else
	       if 6+Semitones > 12 then
		  Indice = (6+Semitones)-12
		  Sharp = (Indice == 2) orelse (Indice == 4) orelse (Indice == 7) orelse (Indice == 9) orelse (Indice == 11)
		  note(name:(Notes.Indice) octave:O+1+DeltaO sharp:Sharp duration:D instrument:I)|{Transpose Semitone T}
               elseif 6+Semitones < 1 then
                  Indice = 12+6+Semitones
                  Sharp = Indice == 2 orelse Indice == 4 orelse Indice == 7 orelse Indice == 9 orelse Indice == 11
                  note(name:(Notes.Indice) octave:O-1+DeltaO sharp:Sharp duration:D instrument:I)|{Transpose Semitone T}
               else
                  Indice = 6+Semitones
                  Sharp = Indice == 2 orelse Indice == 4 orelse Indice == 7 orelse Indice == 9 orelse Indice == 11
                  note(name:(Notes.Indice) octave:O+DeltaO sharp:Sharp duration:D instrument:I)|{Transpose Semitone T}
	       end
	    end
	 [] g then
	     if S then
	       if 9+Semitones > 12 then
		  Indice = (9+Semitones)-12
		  Sharp = (Indice == 2) orelse (Indice == 4) orelse (Indice == 7) orelse (Indice == 9) orelse (Indice == 11)
		  note(name:(Notes.Indice) octave:O+1+DeltaO sharp:Sharp duration:D instrument:I)|{Transpose Semitone T}
	       elseif 9+Semitones < 1 then
		  Indice = 12+9+Semitones
                  Sharp = Indice == 2 orelse Indice == 4 orelse Indice == 7 orelse Indice == 9 orelse Indice == 11
                  note(name:(Notes.Indice) octave:O-1+DeltaO sharp:Sharp duration:D instrument:I)|{Transpose Semitone T}
               else
                  Indice = 9+Semitones
                  Sharp = Indice == 2 orelse Indice == 4 orelse Indice == 7 orelse Indice == 9 orelse Indice == 11
                  note(name:(Notes.Indice) octave:O+DeltaO sharp:Sharp duration:D instrument:I)|{Transpose Semitone T}
               end
            else
	       if 8+Semitones > 12 then
		  Indice = (8+Semitones)-12
		  Sharp = (Indice == 2) orelse (Indice == 4) orelse (Indice == 7) orelse (Indice == 9) orelse (Indice == 11)
		  note(name:(Notes.Indice) octave:O+1+DeltaO sharp:Sharp duration:D instrument:I)|{Transpose Semitone T}
               elseif 8+Semitones < 1 then
                  Indice = 12+8+Semitones
                  Sharp = Indice == 2 orelse Indice == 4 orelse Indice == 7 orelse Indice == 9 orelse Indice == 11
                  note(name:(Notes.Indice) octave:O-1+DeltaO sharp:Sharp duration:D instrument:I)|{Transpose Semitone T}
               else
                  Indice = 8+Semitones
                  Sharp = Indice == 2 orelse Indice == 4 orelse Indice == 7 orelse Indice == 9 orelse Indice == 11
                  note(name:(Notes.Indice) octave:O+DeltaO sharp:Sharp duration:D instrument:I)|{Transpose Semitone T}
	       end
	     end
	 end
      [] H|Tail then
	 {Transpose Semitone Elem}|{Transpose Semitone T}
      else
	 {Transpose Semitone T}
      end
     else
	nil
     end
   end
end
   
   
   %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
   
   fun {PartitionToTimedList Partition}
      case Partition of Elem|T then
	 case Elem of H|Tail then
	    case H of Atom then
	       {ChordToExtended Elem}|{PartitionToTimedList T}
	    [] Name#Octave then
	       {ChordToExtended Elem}|{PartitionToTimedList T}
	    else
	       Elem|{PartitionToTimedList T}
	    end
	 [] Name#Octave then
	    {NoteToExtended Elem}|{PartitionToTimedList T}
	 [] silence(duration:D) then
	    Elem|{PartitionToTimedList T}
	 [] note(name:N octave:O sharp:S duration:D instrument:I) then
	    Elem|{PartitionToTimedList T}
	 [] duration(seconds:Sec Part) then
	    {Append {FixDuration Sec {PartitionToTimedList Part}} {PartitionToTimedList T}}
	 [] stretch(factor:Factor Part) then
	    {Append {Stretch Factor {PartitionToTimedList Part}} {PartitionToTimedList T}}
	 [] drone(note:Sound amount:Amount)then
	    case Sound of H|Tail then
	       {Append {Drone {ChordToExtended Sound} Amount} {PartitionToTimedList T}}
	    else
	       {Append {Drone {NoteToExtended Sound}Amount} {PartitionToTimedList T}}
	    end
	 [] transpose(semitones:Semitones Part) then
	    {Append {Transpose Semitones {PartitionToTimedList Part}} {PartitionToTimedList T}} 
	 [] Atom then
	     {NoteToExtended Elem}|{PartitionToTimedList T}
	 else 
	    Elem|{PartitionToTimedList T}
	 end
	 else
	 nil
      end
   end
  

   %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

   fun {Mix P2T Music}
      % TODO
      {Project.readFile 'wave/animaux/cow.wav'}
   end

   %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

   Music = {Project.load 'joy.dj.oz'}
   Start

   % Uncomment next line to insert your tests.
   % \insert 'tests.oz'
   % !!! Remove this before submitting.
in
   Start = {Time}

   % Uncomment next line to run your tests.
   % {Test Mix PartitionToTimedList}

   % Add variables to this list to avoid "local variable used only once"
   % warnings.
   {ForAll [NoteToExtended Music] Wait}
   
   % Calls your code, prints the result and outputs the result to `out.wav`.
   % You don't need to modify this.
   {Browse {Project.run Mix PartitionToTimedList Music 'out.wav'}}
   
   % Shows the total time to run your code.
   {Browse {IntToFloat {Time}-Start} / 1000.0}
end
